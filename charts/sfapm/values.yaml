# Default values for sfapm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# set to true to enable debug logs on
# apm and vizbuilder
enableDebug: false

nameOverride: ""
fullnameOverride: ""
imagePullSecrets: []

sidecarLogger:
  enabled: true
  image:
    repository: busybox
    tag: latest
    pullPolicy: Always
  resources:
    requests:
      cpu: 10m
      memory: 64Mi
    limits:
      cpu: 250m
      memory: 256Mi

mappingUpdator:
  enabled: true
  image:
    repository: snappyflowml/plugin-mapping-updator
    tag: 0.1.1
    pullPolicy: Always
  resources:
    requests:
      cpu: 10m
      memory: 64Mi
    limits:
      cpu: 125m
      memory: 125Mi

sfapmui:
  replicaCount: 1
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  image:
    repository: snappyflowml/sfapm-ui
    tag: stable
    pullPolicy: IfNotPresent
  resources: 
    limits:
      cpu: 500m
      memory: 250Mi
    requests:
      cpu: 250m
      memory: 128Mi
  service:
    type: NodePort # this is the entrypoint change to Loadbalancer
    nodePort: 30080
  env: {}
  tls: 
    enabled: true
    # change these please provide base64 encode certificate and its keys
    # use command base64 -w 0 <filename>
    cert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURrekNDQW51Z0F3SUJBZ0lVZG40T25CcnNKVEVyUWNmaFVGcDBZeVFOckt3d0RRWUpLb1pJaHZjTkFRRUwKQlFBd1dURUxNQWtHQTFVRUJoTUNRVlV4RXpBUkJnTlZCQWdNQ2xOdmJXVXRVM1JoZEdVeElUQWZCZ05WQkFvTQpHRWx1ZEdWeWJtVjBJRmRwWkdkcGRITWdVSFI1SUV4MFpERVNNQkFHQTFVRUF3d0piRzlqWVd4b2IzTjBNQjRYCkRUSXdNRFl3TlRFeE1UVXhORm9YRFRJeE1EWXdOVEV4TVRVeE5Gb3dXVEVMTUFrR0ExVUVCaE1DUVZVeEV6QVIKQmdOVkJBZ01DbE52YldVdFUzUmhkR1V4SVRBZkJnTlZCQW9NR0VsdWRHVnlibVYwSUZkcFpHZHBkSE1nVUhSNQpJRXgwWkRFU01CQUdBMVVFQXd3SmJHOWpZV3hvYjNOME1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBCk1JSUJDZ0tDQVFFQXY4N2RmZmZGOGdJcnhpYm5lVVRPZ2FnTXllMXc2RjVvZFI3MUcwRFZ4Q1NVdkhKS1Z5ODkKNUozZVBJd2NSbkJmQ25ONXJNaURkVmZuNWswMVUyUmhLYmswbDF2LzFSMmJJWTFldG1oS3NpbmlvbU5VbzAycApNNW1iTEhTWG9RRWdwT0ZtNUxNcVFVSkwrMkxWdFB2cU5JTzV1THEzYytTY1NVNnZhOFBaU2R3OUVVYnhyYk1qCm9LMHJSTnZJSUlhaVFpOEZJeFJ6VUZRbkYvSGlLSm80NHhsRnhDaGFvZTRHTUN2UVdGVUpOQVNteVZuR2hQYnEKVmFmK1FndEhndG5VNnF5RjIvc0NOQjlhVi94L0w0V0RTMzZUSmZsZlBxalJEMWkybzI5bGZDckVqeXBMaDNyeAoxc0ZudlBiQ1E0TFdvQmxQQkNVdlpSTWNMVVRKZFFjY0h3SURBUUFCbzFNd1VUQWRCZ05WSFE0RUZnUVVMWkxnCjE2RVNla1M1YXFleTMrTG03V1g0V1Jnd0h3WURWUjBqQkJnd0ZvQVVMWkxnMTZFU2VrUzVhcWV5MytMbTdXWDQKV1Jnd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUF4bmFRMmpqWHR6eAozNlNmT0hCSzVFQ25Qb3I0dXp2NkVhQnR2Rlgwby9Pajh6SVVwbDFSVllUbXFJcEVIZUc5SVZocndFdi8vOUFRCnRZTncwaWpmUk1tQ0g2L0ZmQTZsWTdFcW5lN0hzVElHU0UxVllOcWwyVTkyN21BemROMUdqRzlpak1uZmpUSVUKeENBL2kyTE1JQ3R2RG5ESUtxdmJ3ZnBSeDFGNHRRL3BZVnp5UnFZRUxZcnZKSXpDTGpQNEs0VjFhdUcwMDh5VApNcHgrcDlWOEpTekhiVTlZdHVvRGJKWlBRVmlXSUNrbkMvWEdYc2VQMGJGQkc1L2Q1Y2xMdnpxM1dJOGRKWDRiClpFMUo2VU9EOWF5N3dJMkF6UUJ4dDNuUzE2cjgwSTBJQ2I4eHVMVVdFM1FVdEs0d256ZnhuZnZCSkVpYk4yQXEKRVpmOEY4MThyUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KCg==
    key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRQy96dDE5OThYeUFpdkcKSnVkNVJNNkJxQXpKN1hEb1htaDFIdlViUU5YRUpKUzhja3BYTHoza25kNDhqQnhHY0Y4S2MzbXN5SU4xVitmbQpUVFZUWkdFcHVUU1hXLy9WSFpzaGpWNjJhRXF5S2VLaVkxU2pUYWt6bVpzc2RKZWhBU0NrNFdia3N5cEJRa3Y3Cll0VzArK28wZzdtNHVyZHo1SnhKVHE5cnc5bEozRDBSUnZHdHN5T2dyU3RFMjhnZ2hxSkNMd1VqRkhOUVZDY1gKOGVJb21qampHVVhFS0ZxaDdnWXdLOUJZVlFrMEJLYkpXY2FFOXVwVnAvNUNDMGVDMmRUcXJJWGIrd0kwSDFwWAovSDh2aFlOTGZwTWwrVjgrcU5FUFdMYWpiMlY4S3NTUEtrdUhldkhXd1dlODlzSkRndGFnR1U4RUpTOWxFeHd0ClJNbDFCeHdmQWdNQkFBRUNnZ0VCQUt0ZTdqSXdBQ0Zib3pTbGFjYkZuU1BtdTVabW1LeGtQVHYzYnRMc3VKRkkKaGNOZzhkNjNqTHNIK1psckxaQVpzakNxUDVvS2hMbUEwdWJITU0vVExhU1RudE5sRlV5WjZSS3ZObUlQQ0QzcQpnbHpJRnNUWkRFWFlCZlpRTFhGaWlvSUdDV0pvV1daNUQxNEpUaHNud0hjdkFlNTBsSmZ0TjEyZitjZDA4bHl6CjV5Q1g1ODJsMnAwUUVDUlRQc0lVRGlHck9uYVpsY2k2bEhLZWIwbVdaR0Z0dEZGbytIZGdqcHIyTytreFN3SVMKY1p5MDk3RFJyODgwMzkzbVdUaDVnODFFeGpheVQwUUlQSGNlSUFORkRmUW9WSnhQMXAraEtNTjdnMTJIWTBpMQowOXoyU3czR1ZhNXFlV2NTdUkzOTg3aUtDNTRQeHBYK3M3UlQ4aWRIaUtFQ2dZRUE2alZvdDlRU3B3ZlQ3VzVzCnBDSFNIcTV2NDUvVFFLNlovRWR0c3RQaE04aFhzZ2ZYbThhbE9kYXZJbVY2d2IxMHZsRnoxemg4cEh6RCtZdEwKSXJ1clBRL3lDR0VjeS9vZmtLcmF3UGxrUjE1YkVuYVlBWTIxelVObGRsVFZCOUlNVFcxYjRWaEpXQ0RQTnZWMApIMlVsM0xYWngxM2VaZklZT2IrMXJLT0t4VmtDZ1lFQTBhZUZoa0g0cVNUaHdNVUNpTm9aVXNsVlFkY2NMSGw4ClJZZjR3dHhZTnV1VTRPZm1JVE1XZWVtaEdENTNVQjBoVnp1dkc1UmgveDhQRDQyWm5NY3JpQk9oNEx4MGVGSksKMkR6czVjNmwyOVVlRS9laGJmNFNxR3NieEhwUHNDRWU4WnRTYUFoems2Z1R5VG13bEVOTmJqZTYrQnRCM0hXeApuRXZLZmMxWHBqY0NnWUJCNjVKejJ6Nzh3RmxJQk1LVFYrbWFOU0xOQUprbkpYMjE0aXpnSG43T1lsODhmclNTCjVkQnZmUnVDSk9udVNmTG45bWtTZEpXd2ZtVnlnV0ErZ0cvc0dlYlhzTzI0QThpS29XdzgwSFVIR1dtc3dyQjYKRDNiU05Wd0RlRkVWaUd0cUI1UEswMXloYjJxalgyYTF4M1Jtc05DQktzeUVDU1lFYXc4cGJrYUswUUtCZ0RIYworUG5raU9LWnZnT2VGNnM2ekJrUGYzS0lXZEFPR010a3VucUY4NGtrWUtWWklqZTFNZHhPLzV5SGh0TU1DcGozCnZmNytQSXh6ODU0TVhJT1lMemRQREFvcWFEMFJ2WEZPbEQxWDk4U2dIR1k5V0N5VDZCWWNXMTlRZzlGdEh6SHgKY2hrQ0laTDF2N2IxUEpVV3FMelZEbWZoKzdrV1dPYkdjK09WeWduakFvR0FLajRnYzFOMFkxQXlEQzczZEZxTQo2ZUJ2QjIzTmNxNmx6M0cxVHl5b0RCWDJOeDFmQ2l1aVNzSTdJbkZnYTBWQ0w5RE5CVjNaYjlKdGIrdlhZcmlRCmhpQU9BR2xSSGlOTXJ6MXo2aUhGd1FtYmRMU1JzUEFocC8xeE1jd0dEVWpuYmVoN1ZjRFZjbE1EUUlXRUNibnEKc1B3T2dwZ05HY1FqejhlcjFzLzNnNms9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0KCg==


sfapm:
  replicaCount: 3
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 6
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  image:
    repository: snappyflowml/sfapm-server
    tag: stable
    pullPolicy: IfNotPresent
  resources: 
    limits:
      cpu: 2000m
      memory: 1000Mi
    requests:
      cpu: 250m
      memory: 250Mi
  service:
    type: ClusterIP
    port: 8000

sfapm_celery:
  resources: 
    limits:
      cpu: 500m
      memory: 500Mi
    requests:
      cpu: 200m
      memory: 250Mi
  env:
    C_FORCE_ROOT: true
    CELERY_OPTS: "-O fair --max-tasks-per-child 20 -P gevent"
  beat:
    command: "celery beat -A snappyflow -l $LOG_LEVEL"
  default:
    replicaCount: 2
    command: "celery worker -n default@%n -A snappyflow -l $LOG_LEVEL -Q default -c10 $CELERY_OPTS"
  notify:
    replicaCount: 2
    command: "celery worker -n notify@%n -A snappyflow -l $LOG_LEVEL -Q notify -c10 $CELERY_OPTS"
  periodic:
    replicaCount: 4
    command: "celery worker -n periodic@%n -A snappyflow -l $LOG_LEVEL -Q periodic -c5 $CELERY_OPTS"
  sftrace:
    replicaCount: 1
    command: "celery worker -n sftrace@%n -A snappyflow -l $LOG_LEVEL -Q sftrace -c10 $CELERY_OPTS"
  provision:
    replicaCount: 1
    command: "celery worker -n provision@%n -A snappyflow -l $LOG_LEVEL -Q provision -c1 $CELERY_OPTS"


vizbuilder:
  replicaCount: 3
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 6
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  image:
    repository: snappyflowml/sfapm-vizbuilder
    tag: stable
    pullPolicy: IfNotPresent
  resources: 
    limits:
      cpu: 2000m
      memory: 1000Mi
    requests:
      cpu: 250m
      memory: 250Mi
  service:
    type: ClusterIP
    port: 8000


vizbuilder_celery:
  resources: 
    limits:
      cpu: 500m
      memory: 500Mi
    requests:
      cpu: 200m
      memory: 250Mi
  env:
    C_FORCE_ROOT: true
    CELERY_OPTS: "-O fair --max-tasks-per-child 20 -P gevent"
  beat:
    command: "celery beat -A vizbuilder -l $LOG_LEVEL"
  alert:
    replicaCount: 2
    command: "celery worker -n alert@%n -A vizbuilder -l $LOG_LEVEL -Q alert -c10 $CELERY_OPTS"
  logops:
    replicaCount: 1
    command: "celery worker -n logops@%n -A vizbuilder -l $LOG_LEVEL -Q logops -c10 $CELERY_OPTS"
  signature:
    replicaCount: 1
    command: "celery worker -n signature@%n -A vizbuilder -l $LOG_LEVEL -Q signature -c10 $CELERY_OPTS"


sftrace:
  replicaCount: 1
  image:
    repository: snappyflowml/sftrace-server
    tag: 1
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: "100m"
      memory: "100Mi"
    limits:
      cpu: "2000m"
      memory: "2Gi"
  service:
    type: NodePort
    port: 8200
    jaegerport: 14268
  output:
    host: localhost
    port: 32145
    token: " "

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  # The names of the image pull secrets to be attached to this service account 
  imagePullSecrets: []
  # disable mounting sa token inside pods
  automountServiceAccountToken: false

podAnnotations:
  prometheus.io/scrape: "false"

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

nodeSelector: {}

tolerations: []

affinity: {}

redis:
  image:
    repository: redis
    pullPolicy: IfNotPresent
    tag: "5.0"
  persistence:
    enabled: true
    storageClass: ""
    size: 4Gi
  resources:
    limits:
      cpu: 1000m
      memory: 500Mi
    requests:
      cpu: 100m
      memory: 128Mi
  config:
    redis.conf: |-
      appendonly yes
      maxmemory 300mb
      maxmemory-policy allkeys-lru
  podAnnotations:
    prometheus.io/scrape: "false"

# User Management and Identity management system
keycloak:
  # enabled true for keycloak server
  # false for django internal db for user management
  enabled: false
  serverIP: "" # eg: https://IP:port/auth/
  user: admin@snappyflow.io # admin user email ID
  password: admin # admin user password
  realm: master
  clientid: admin-cli
  clientkey: "" # keycloak admin client key
  publickey: "" # keycloak public key
  supportemail: "" # support emailid where upgrade request sent
  websiteurl: "" # websiteURL
  defaultprofile: "demo-profile" # default profile for demo apps

# Usage management system
usage_system:
  # Usage system host IP/Domain
  enabled: false
  host: ""
  # Port number for usage system server
  port: 443
  # tls true for HTTPS
  tls: False

# set this to true/True if using pg bouncer
disable_server_side_cursors: false

postgresql:
  # enabled true deploys postgresql as statefull set on the same cluster
  enabled: true

  # if enabled false, chart will connect to external database
  # create two data bases with names snappyflow and vizbuilder
  # create a user and grant access to database snappyflow and vizbuilder
  # provide external section if enabled is false

  # external:
  #   dbHost: "test-db-postgresql"
  #   dbPort: ""
  #   dbUser: "test"
  #   dbPassword: "test123"

  image:
    repository: postgres
    pullPolicy: IfNotPresent
    tag: "9.6"
  persistence:
    enabled: true
    storageClass: ""
    size: 8Gi
  # when local postgresql is enabled below values are used to configure database
  rootPassword: postgres
  rootUser: postgres
  multidb: snappyflow;vizbuilder
  multidbUser: snappyflow
  multidbUserPassord: maplelabs

global:
  sfappname: apm-server-saas
  sfprojectname: apm-server
  sfappname_key: snappyflow/appname
  sfprojectname_key: snappyflow/projectname
  enable_sftrace: false
  key: ""

